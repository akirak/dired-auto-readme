* News
<2022-02-10 tor>

Refactored more, made it to work with org-view-mode for even prettier dired
renderings :).

<2021-05-10 mÃ¥n>

Completely reworked, with better org/markdown preview.

* Dired Auto Readme

[[./images/txt-mode.png]]

Display a /Readme/ file in a dired buffer if one exists. The content of the file
is displayed below the directory content. Cursor can freely move into the /Readme/
file content, and you can search, copy, click on links and call some Emacs
functions on the content as avialable in respective modes. However, the file is
read only so you can not modify it, and some other functionality normally found
might also not be available.

For markdown you should have [[https://jblevins.org/projects/markdown-mode/][markdown-mode]].

Org will be displayed with org-mode with pretty entities, links and images
enabled. You can turn off some of that if your computer is slow.

How and how much is syntax highlighted, prettified, etc, depends on which
packages you have installed in your Emacs. Org mode is much better in that
regard. It can display bold, italics, underline, tables, links and inline
images, so previews are much nicer than with markdown mode.

I suggest to also install [[https://github.com/Fuco1/org-pretty-table][org-pretty-table]] (it is not a package), if you
would like to see prettier tables in your readme files too.

Also to reduce some markup clutter in your org mode files, I suggest installing
[[https://github.com/amno1/org-view-mode][org-view-mode]]. If any of those are available, dired-auto-readme will turn them
on automatically in dired preview.

* Install

This is not yet in either Elpa nor Melpa, so currently you will have to either
clone this repository or just download raw dired-auto-readme.el somewhere where
your Emacs can find it.

* Usage

To enable/disable dired-auto-readme-mode: M-x dired-auto-readme-mode.

There are few settings that can be modified, either via
customize->Files->Dired Auto Readme or via setq in your init file or a running
Emacs session.

dired-auto-readme-files - A list that lets you specify which files are
considered as 'readme' files.

dired-auto-readme-display-images - A boolean value that controles if images are
displayed by default or not. Set it to nil to disable display of inline images.

dired-auto-readme-display-pretty-tables - A boolean value that controles if
tables are displayed with unicode characters. The value vill have effect only if
you have [[https://github.com/Fuco1/org-pretty-table][org-pretty-table]] installed in your Emacs.

* Known Problems

We are combining here two major modes from two different buffers in one buffer,
something Emacs is not ment to do so there will be some problems. The real
problem is that most minor modes expect to work with only one major mode buffer,
in this case Dired. If a minor mode will do something over entire Dired there
will be issues, unfortunately. Sometimes it is enough to press 'g' to update
dired buffer so it will render properly, but for some modes there will be
artifacts, and other won't work at all.

For example dired-auto-readme-mode does not play well with overlays. If you are
using some mode that displays overlays, as for example [[https://github.com/clemera/dired-git-info][dired-git-info]], you will
have to refresh your dired buffer after you toggle on/off dired-auto-readme-mode
(just press 'g').

There are hundreds of packages and possible variations, there are probably other
bugs I am not aware off.  See if it works for you, and if/when you find problems,
please report them or even better, give me a PR or send a patch.

What I do here is a dirty (and somewhat inneficient) trick. I simply open file
in another buffer, let Emacs do the magic, and then copy buffer content
inclusive properties over to dired buffer with font-lock (syntax hightlight)
tuned to work only on dired portion of the buffer.

It is inneficient, but As I have tested, I don't notice any speed problems on my
computer, even on one older dual core laptop from 2016. I guess it would need a
directory with hundred files or really big readme file for this to be
noticable (if org/markdown modes are already loaded in Emacs).

* About

This was inspired by very nice [[https://gitlab.com/kisaragi-hiu/dired-show-readme][dired-show-readme]] by Kisaragi Hiu. However,
dired-show-readme displays a Readme file as an image, and also uses external
process to render a file to an image. It would be possible to use svg-renderer
in Emacs to render to an svg image, however, a drawback of an image is, well,
that it is an image. I find myself often wishing to click on a link in a Readme
file, so I prefer having them as plain text so I can move cursor freely in and
out and copy text, click on links etc.

* License

Copyright (C) 2020  Arthur Miller

Author: Arthur Miller <arthur.miller@live.com>
Keywords: 

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
